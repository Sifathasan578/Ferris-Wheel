* {
    box-sizing: border-box;
    /* dummy */
    border: 1px solid blue;

    margin: 0;
    padding: 0;
}

/* dummy div / .wheel */
div {
    border: 1px solid red;
}

/* dummy span / .line */
span {
    border: 1px solid green;
}


.wheel {
    border: 2px solid black;
    border-radius: 50%;
    margin-left: 50px;

    /* ? */
    position: absolute;
    height: 55vw;
    width: 55vw;

    max-width: 500px;
    max-height: 500px;

    animation-name: wheel;
    animation-duration: 10s;

    /* sets how many times your animation should repeat */
    animation-iteration-count: infinite;

    /* sets how the animation should progress over time.  */
    animation-timing-function: linear;
}

.line {
    background-color: black;
    width: 50%; 
    height: 2px;

    position: absolute;
    left: 50%;
    top: 50%;

    /* The transform-origin property is used to set the point around which a CSS transformation is applied.  */

    /* This will offset the origin point by 0% from the left and 0% from the top, setting it to the top left corner of the element. */

    transform-origin: 0% 0%;
}

.line:nth-of-type(2) {
    transform: rotate(60deg);
}

.line:nth-of-type(3) {
    transform: rotate(120deg);
}

.line:nth-of-type(4) {
    transform: rotate(180deg);
}

.line:nth-of-type(5) {
    transform: rotate(240deg);
}

.line:nth-of-type(6) {
    transform: rotate(300deg);
}

.cabin {
    background-color: red;

    width: 20%;
    height: 20%;

    position: absolute;
    border: 2px solid;
    
    /* This will set the origin point to be offset 50% from the left and 0% from the top, placing it in the middle of the top edge of the element. */
    transform-origin: 50% 0%;

    /* This will set the animation-name, animation-duration, animation-timing-function, and animation-iteration-count properties in that order. */
    animation: cabins 10s ease-in-out infinite;
}

.cabin:nth-of-type(1) {
    right: -8.5%;
    top: 50%;
}

.cabin:nth-of-type(2) {
    right: 17%;
    top: 93.5%;
}

.cabin:nth-of-type(3) {
    right: 67%;
    top: 93.5%;
}

.cabin:nth-of-type(4) {
    left: -8.5%;
    top: 50%;
}

.cabin:nth-of-type(5) {
    left: 17%;
    top: 7%;
}

.cabin:nth-of-type(6) {
    right: 17%;
    top: 7%;
}

/* The @keyframes at-rule is used to define the flow of a CSS animation. Within the @keyframes rule, you can create selectors for specific points in the animation sequence, such as 0% or 25%, or use from and to to define the start and end of the sequence. */

/* @keyframes rules require a name to be assigned to them, which you use in other rules to reference.  */

@keyframes wheel {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

@keyframes cabins {
    0% {
        transform: rotate(0deg);
        /* background-color: yellow; */
    }
    25% {
        background-color: yellow;
    }
    50% {
        background-color: purple;
    }
    75% {
        background-color: yellow;
    }
    100% {
        transform: rotate(-360deg);
    }
}